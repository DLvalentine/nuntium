- Figure a way to delete files or replace "loading data..." text
- Figure a better way to display "loading" and message text
- Improve throttling issue with stocks, apply to rss feeds
- Add keyboard listener to open site
- Add speed controls (inc. pause)
- ensure htmlentity decoder does not mess with the stock symbol unicode stuff....
- use super for inherited methods, duh
- stock/rss refresh in background! after shift -> empty
- Take a look at class structure again, make more use of inheritance where it makes sense. 
- Error handling for RSS feeds that don't exist (Reuters pulled theirs, and weird errors started happening on my end)
- maybe look into git hooks to update this todo list automatically.. and to do other things. Just as an excercise in learning git hooks.
- clean up... or really, start using, branches.
- Look into why http/too many requests is firing. Might need to jitter the rss requests. I reduced the number of feeds in the default conf for now.
- rein in the scope of this, update the repo docs to reflect it. Going to focus on CLI and GUI for now, and maybe come up with one more aggregator?
- I want to come up with a way to... release this with a DB of rss feeds that exist? There doesn't seem to be a way to discover RSS feeds easily
- come up with CLI options => override config stuff
- be able to handle more than 10 stock symbols, eventually
- might make sense to add a JSON reader function to util.rb, and then make specific uses of it in the aggregator classes
- need better exception handling in rss aggregator
- come up with config template
- remove caps from conf...?

--- AUTO GENERATED ---
.rubocop.yml:# TODO: Find/improve trouble spots, if possible
TODO.txt:- maybe look into git hooks to update this todo list automatically.. and to do other things. Just as an excercise in learning git hooks.
aggregator/aggregator.rb:  ## TODO: actually this will be useful, I just need to implement it correctly.
aggregator/aggregator.rb:  ## TODO: Only here to serve as an implementation reminder. Remove for prod.
aggregator/disk.rb:  # TODO: make a file directory attr in config.json, since
aggregator/disk.rb:  #  TODO: an optimization would be to check the size first, and skip
aggregator/rss.rb:    ## todo: shift probaly not the right thing... or if it is, need to rewrite cache...
aggregator/rss.rb:  # TODO: Pull out caching piece into utils...? Maybe?
aggregator/rss.rb:  # TODO: LOADING TEXT!!!
aggregator/rss.rb:  ### TODO: probably candidate for pulling out into method on Aggregator
aggregator/stock.rb:  # TODO: Pull out caching piece into utils...? Maybe?
aggregator/stock.rb:  # TODO: LOADING TEXT!!!
aggregator/stock.rb:        if symbol_length > 5 && index > 4 # TODO: Handle this in batches, so we can support more than 10 symbols, staggered
aggregator/stock.rb:          # TODO: this fires even if we have it in a cached file. Not the end of the world, but optimally we want to redo this...
aggregator/stock.rb:    # TODO: DRY this up, make sure it isn't being called too much (see init_cache)
aggregator/stock.rb:    # TODO: simple file operations like this are a good candidate for optimization/moving
aggregator/stock.rb:    #### TODO: Break this out into a new function, since #quote uses it, too. Not doing it now for the sake of time.
aggregator/stock.rb:    # TODO: DRY this up, make sure it isn't being called too much (see init_cache)
aggregator/stock.rb:    # TODO: simple file operations like this are a good candidate for optimization/moving
aggregator/stock.rb:    ### TODO: candidate for pulling out into method on Aggregator
aggregator/stock.rb:    ### TODO: candidate for optimization
display/display.rb:  ## TODO: Only here to serve as an implementation reminder. Remove for prod.
nuntium.rb:# TODO : use config
nuntium.rb:# TODO: Add improved loading icon/thing while chunking data
nuntium.rb:  ## TODO: make sure this thread gets killed...after you add in the frfr invalidation... include better loading text info?
nuntium.rb:# TODO: invalidate cache frfr when they are old or mismatched...this is happening at the aggregator level right now
nuntium.rb:# TODO: this might be better off in util?
nuntium.rb:# TODO: this might be better off in util?
todo.bat:git grep -EIi "TODO|FIXME" >> TODO.txt
util.rb:  ### TODO: Add more keyboard listeners -- one to pause the feed, one to follow
util.rb:  ### TODO: this might make more sense as a Display::Cli method.
